CQ0:  Which of the six proposed sorting algorithms was incorrect?  Please provide a specific input to that algorithm to demonstrate that it does not always sort correctly.  NOTE:  this is a team exercise, but each individual should include the team answer in their CQ.txt file.  Please do not share information across teams on this one.
    We believe that the fourth algorithm is incorrect. A specific example would be 3 2 1 0.
    This array does not sort since it would give the following output:
    3 2 1 0
    3 1 2 0
    1 3 2 0
    1 2 3 0
    1 2 0 3
    1 0 2 3 
    This algorithm does not work since it does not have enough iterations to push the last element all the way to the front. 


CQ0:  Write your own pseudocode for bubble sort.  Do not look it up on the Web:  this exercise is intended to be not just about bubble sort, but also about practicing writing pseudocode yourself from scratch.
    for i in range n-1
        for j in range n-2
            if array[j] < array[j+1]
                swap array[j] and array[j+1]

CQ1:  Write your own pseudocode for bubble sort.  Do not look it up on the Web:  this exercise is intended to be not just about bubble sort, but also about practicing writing pseudocode yourself from scratch.
    int minvalueplace = array[0]
    for i in range n-1
        for j = i+1 in range n
            if array[minvalue] > array[j]
                minvalue = j
        swap array[i] and array[minvalue]

            

CQ3:  Write your own pseudocode for insertion sort.  As before, please do not look it up elsewhere (but feel free to discuss it with others)
    for i in range n
        element = array[i]
        max = i-1
        while (element < array[max] && max >= 0)
            array[max+1] = a[max]
            max--
        a[max+1] = element
    

        